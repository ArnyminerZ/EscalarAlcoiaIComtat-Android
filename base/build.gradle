apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply from: './secure.gradle'
apply from: './version.gradle'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    ndkVersion "23.0.7123448"
    defaultConfig {
        applicationId "com.arnyminerz.escalaralcoiaicomtat"
        minSdkVersion 24
        targetSdkVersion 30
        versionCode findProperty("android.versionCode") as Integer
        versionName VERSION_NAME
        // testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        resValue "string", "google_maps_key", MAPS_API_KEY
        resValue "string", "sentry_dsn", SENTRY_DNS
    }
    signingConfigs {
        release {
            storeFile file("keystore.jks")
            storePassword SIGNING_KEYSTORE_PASSWORD
            keyAlias SIGNING_KEY_ALIAS
            keyPassword SIGNING_KEY_PASSWORD
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            setProperty("archivesBaseName", "EscalarAlcoiaIComtat-${android.defaultConfig.versionCode}-${android.defaultConfig.versionName}")
            signingConfig signingConfigs.release

            kotlinOptions {
                freeCompilerArgs = [ '-Xuse-experimental=kotlin.Experimental' ]
            }

            ndk.debugSymbolLevel = 'FULL'
        }
        debug {
            versionNameSuffix "-debug-build" + getDate()
            setProperty("archivesBaseName", "EscalarAlcoiaIComtat")
        }
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    dynamicFeatures = []

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
    }

    buildFeatures {
        viewBinding true
    }
}

android.applicationVariants.all {  variant ->
    if ( variant.buildType.name == "release"){
        variant.assemble.doLast {
            // This increases version code on release
            def versionPropsFile = file("../gradle.properties")
            Properties versionProps = new Properties()
            versionProps.load(new FileInputStream(versionPropsFile))
            def code = versionProps['android.versionCode'].toInteger() + 1
            versionProps['android.versionCode'] = code.toString()
            versionProps.store(versionPropsFile.newWriter(), null)
            logger.lifecycle("Increased version code to $code")
        }
    }
}

configurations {
    all {
        exclude module: 'httpclient'
        exclude module: 'commons-logging'
    }
}

static def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmss')
    return formattedDate
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.4.30"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.android.material:material:1.3.0'

    implementation 'androidx.preference:preference-ktx:1.1.1'

    implementation 'com.google.android.gms:play-services-auth:19.0.0'
    implementation 'com.google.api-client:google-api-client:1.30.11'
    implementation 'com.google.android.play:core-ktx:1.8.1'

    //testImplementation 'junit:junit:4.13'
    //androidTestImplementation 'androidx.test:runner:1.2.0'
    //androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation 'com.android.volley:volley:1.2.0-rc1'

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-play-services:1.4.2-native-mt'

    // Android Jetpack
    def jetpack_work_version = "2.5.0"
    implementation "androidx.work:work-runtime-ktx:$jetpack_work_version"
    implementation "androidx.work:work-gcm:$jetpack_work_version"
    //androidTestImplementation "androidx.work:work-testing:$jetpack_work_version"
    implementation "androidx.startup:startup-runtime:1.0.0"

    def camerax_version = "1.1.0-alpha02"
    implementation "androidx.camera:camera-camera2:$camerax_version"
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    implementation "androidx.camera:camera-view:1.0.0-alpha22"

    // Android Maps SDK 3.0.0 BETA
    implementation 'com.google.android.libraries.maps:maps:3.1.0-beta'

    // Android Maps SDK Extra
    implementation 'com.google.android.gms:play-services-basement:17.6.0'
    implementation 'com.google.android.gms:play-services-base:17.6.0'
    implementation 'com.google.android.gms:play-services-gcm:17.0.0'
    implementation 'com.google.android.gms:play-services-location:18.0.0'

    // Android Maps SDK Utility Lib
    implementation 'com.google.maps.android:android-maps-utils-v3:2.2.0'

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.4.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.4.3-native-mt'

    // Android Jetpack
    implementation 'androidx.exifinterface:exifinterface:1.3.2'
    implementation "androidx.datastore:datastore-preferences:1.0.0-alpha07"

    // Sentry
    implementation 'io.sentry:sentry-android:4.2.0'
    implementation 'io.sentry:sentry-android-timber:4.2.0'

    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    // Number picker for Mark Completed
    implementation 'me.angrybyte.picker:picker:1.3.1'

    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    implementation 'com.github.chrisbanes:PhotoView:2.3.0'

    implementation 'com.github.sephiroth74:android-target-tooltip:2.0.4'

    implementation 'io.noties.markwon:core:4.6.0'
}

apply plugin: 'com.google.gms.google-services'