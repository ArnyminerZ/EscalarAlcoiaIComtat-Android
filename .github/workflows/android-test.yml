name: Android Test

on: [push, pull_request]

jobs:
  update_release_draft:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Prepare google-services.json
        run: |
          echo "${{ secrets.GOOGLE_SERVICES }}" >> base/google-services.json
          echo "${{ secrets.GOOGLE_SERVICES }}" >> instant/google-services.json
      - name: Prepare Gradle secure file
        run: |
          echo 'MAPBOX_DOWNLOADS_TOKEN=${{ secrets.MAPBOX_TOKEN_SECRET }}' >> local.properties
          echo 'MAPBOX_PUBLIC_TOKEN=${{ secrets.MAPBOX_TOKEN_PUBLIC }}' >> local.properties
          echo 'SIGNING_KEYSTORE_PASSWORD=${{ secrets.SIGNING_KEYSTORE_PASSWORD }}' >> local.properties
          echo 'SIGNING_KEY_ALIAS=${{ secrets.SIGNING_KEY_ALIAS }}' >> local.properties
          echo 'SIGNING_KEY_PASSWORD=${{ secrets.SIGNING_KEY_PASSWORD }}' >> local.properties
          echo 'GOOGLE_AUTH_CLIENT_ID=${{ secrets.GOOGLE_AUTH_CLIENT_ID }}' >> local.properties
      - name: Prepare Gradle version file
        run: |
          truncate -s 0 base/version.gradle
          echo "ext {" >> base/version.gradle
          echo "VERSION_NAME=\"${{ steps.create_release.outputs.tag_name }}\"" >> base/version.gradle
          echo "}" >> base/version.gradle
          cat base/version.gradle

      - name: Run tests
        id: test
        run: bash ./gradlew test --stacktrace
